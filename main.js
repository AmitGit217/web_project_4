!function(){"use strict";const e={cardsSection:".elements",cardImagePopup:".popup_image",cardsTemplate:"#card-template",cardClass:".card",cardImageClass:".card__image",cardCaptionClass:".card__caption",cardRemoveButton:".card__removeButton",cardLikeButton:".card__like-button",cardLikeButtonActive:"card__like-button_active"},t=(document.querySelector(".popup__input_addPhoto_caption"),document.querySelector(".popup__input_addPhoto_ImageURL"),document.querySelector("#addImagePopup__form"),document.querySelector("#addImagePopup"),document.querySelector(e.cardsSection)),{cardClass:s,cardImageClass:n,cardCaptionClass:i,cardRemoveButton:o,cardLikeButton:r,cardLikeButtonActive:a}=e;class c{constructor(e,t,i){this._handleClick=i,this._text=e.name,this._link=e.link,this._template=t,this._card=document.querySelector(this._template).content.querySelector(s).cloneNode(!0),this._likeButton=this._card.querySelector(r),this._removeButton=this._card.querySelector(o),this._image=this._card.querySelector(n)}_toggleLike(){this._likeButton.addEventListener("click",(e=>{e.stopPropagation(),this._likeButton.classList.toggle(a)}))}_removeCard(){const e=t=>{t.stopPropagation(),this._card.remove(),this._removeButton.removeEventListener("click",e)};this._removeButton.addEventListener("click",e)}_setEventListeners(){this._toggleLike(),this._removeCard(),this._card.addEventListener("click",(()=>{this._handleClick()}))}generateCard(){return this._image.src=this._link,this._image.alt=this._text,this._card.querySelector(i).textContent=this._text,this._setEventListeners(),this._card}}class l{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup__close-button"),this._isOpen="popup_show"}open(){this._popup.classList.add(this._isOpen),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(this._isOpen),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class u extends l{constructor(e,t){super(e),this._handleSubmit=t,this._inputs=[...this._popup.querySelectorAll(".popup__input")],this._form=this._popup.querySelector(".form")}close(){super.close(),this._form.reset()}getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this.getInputValues())}))}}class p{constructor(e,t){this._settings=e,this._formElement=t,this._submit=this._formElement.querySelector(this._settings.submitButtonSelector),this._inputList=[...this._formElement.querySelectorAll(this._settings.inputSelector)]}_disableButtonState(){this._submit.classList.add(this._settings.inactiveButtonClass),this._submit.setAttribute("disabled",!0)}_enableButtonState(){this._submit.classList.remove(this._settings.inactiveButtonClass),this._submit.removeAttribute("disabled",!0)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this._disableButtonState():this._enableButtonState()}_resetValidation(){this._disableButtonState(),this._inputList.forEach((e=>{this._hideErrorMessage(e)}))}_showErrorMessage(e){const t=e.validationMessage,s=this._formElement.querySelector(".".concat(e.id,"-error"));s.textContent=t,e.classList.add(this._settings.inputErrorClass),s.classList.add(this._settings.errorClass)}_hideErrorMessage(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._toggleButtonState(),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._resetValidation()})),this._setEventListeners()}}const{cardsTemplate:_}=e,d=document.querySelector(".profile__add-button"),h=e=>new c(e,_,(()=>{v.open(e)})).generateCard(),m=new class{constructor(e,t){let{data:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}setItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({data:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=h(e);m.setItem(t)}},t);m.renderItems();const g=new u("#addImagePopup",(()=>{const{caption:e,image:t}=g.getInputValues(),s=h({name:e,link:t});m.prependItem(s),g.close()})),v=new class extends l{constructor(e){super(e),this._popupImage=document.querySelector(".popup__image"),this._popupCaption=document.querySelector(".popup__caption")}open(e){let{name:t,link:s}=e;this._popupImage.src=s,this._popupImage.alt=t,this._popupCaption.textContent=t,super.open()}}(".popup_image"),b={};var E;E={formSelector:".form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},[...document.querySelectorAll(E.formSelector)].forEach((e=>{const t=new p(E,e),s=e.getAttribute("name");b[s]=t,t.enableValidation()}));const L=document.querySelector("#profilePopup__edit-button"),S=new class{constructor(e){let{name:t,job:s}=e;this._name=document.querySelector(t),this._job=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUerInfo(e){let{name:t,job:s}=e;this._name.textContent=t,this._job.textContent=s}}({name:".profile__name",job:".profile__description"}),y=new u("#profilePopup",(()=>{const{fullName:e,description:t}=y.getInputValues();S.setUerInfo({name:e,job:t}),y.close()}));d.addEventListener("click",(()=>g.open())),L.addEventListener("click",(()=>{const{name:e,job:t}=S.getUserInfo();y.setInputValues({fullName:e,description:t}),y.open()})),v.setEventListeners(),y.setEventListeners(),g.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,