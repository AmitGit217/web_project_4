!function(){"use strict";const t=(t,e)=>fetch(t,e).then((t=>t.ok?t.json():Promise.reject("Error: ".concat(t.status)).catch(console.log)));function e(t,e){e.textContent=t?"Saving...":e.name}const s={cardsSection:".elements",cardImagePopup:".popup_image",cardsTemplate:"#card-template",cardClass:".card",cardImageClass:".card__image",cardCaptionClass:".card__caption",cardRemoveButton:".card__removeButton",cardLikeButton:".card__like-button",cardLikeButtonActive:"card__like-button_active",cardCounter:".card__like-counter",deletePopup:".popup_confirm"},n=(document.querySelector(".popup__input_addPhoto_caption"),document.querySelector(".popup__input_addPhoto_ImageURL"),document.querySelector("#addImagePopup__form"),document.querySelector("#addImagePopup"),document.querySelector(s.cardsSection)),{cardClass:r,cardImageClass:i,cardCaptionClass:a,cardRemoveButton:o,cardLikeButton:c,cardLikeButtonActive:l,cardCounter:u}=s;class d{constructor(t){let{data:e,template:s,handleClick:n,handleDelete:a,userId:l,handleLike:d}=t;this.data=e,this._handleClick=n,this._text=e.name,this._link=e.link,this._likesData=e.likes,this._template=s,this._card=document.querySelector(this._template).content.querySelector(r).cloneNode(!0),this._likeButton=this._card.querySelector(c),this._removeButton=this._card.querySelector(o),this._image=this._card.querySelector(i),this._cardCounter=this._card.querySelector(u),this._deleteHandler=a,this._cardId=e._id,this._ownerId=e.owner._id,this._userId=l,this._likeAction=d}_removeCard(){this._card.remove()}_setEventListeners(){this._likeButton.addEventListener("click",(t=>{t.stopPropagation(),this._likeAction(this._cardId)})),this._removeButton.addEventListener("click",(t=>{t.stopPropagation(),this._deleteHandler(this._cardId)})),this._card.addEventListener("click",(()=>{this._handleClick()}))}generateCard(){return this._image.src=this._link,this._image.alt=this._text,this._cardCounter.textContent=this._likesData.length,this._card.querySelector(a).textContent=this._text,this._setEventListeners(),this._userId!==this._ownerId&&(this._removeButton.style.display="none"),this._likesData.some((t=>{t._id===this._userId&&this._likeButton.classList.add(l)})),this._card}}class h{constructor(t){var e,s;s=t=>{"Escape"===t.key&&this.close()},(e="_handleEscClose")in this?Object.defineProperty(this,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[e]=s,this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close-button"),this._isOpen="popup_show"}open(){this._popup.classList.add(this._isOpen),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(this._isOpen),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(t=>{t.target===t.currentTarget&&this.close()}))}}class _ extends h{constructor(t,e){super(t),this._handleSubmit=e,this._inputs=[...this._popup.querySelectorAll(".popup__input")],this._form=this._popup.querySelector(".form"),this._submitButton=this._form.querySelector(".popup__submit-button")}close(){super.close(),this._form.reset()}getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}setInputValues(t){this._inputs.forEach((e=>{e.value=t[e.name]}))}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(t=>{t.preventDefault(),this._handleSubmit(this.getInputValues())}))}}class p{constructor(t,e){this._settings=t,this._formElement=e,this._submit=this._formElement.querySelector(this._settings.submitButtonSelector),this._inputList=[...this._formElement.querySelectorAll(this._settings.inputSelector)]}_disableButtonState(){this._submit.classList.add(this._settings.inactiveButtonClass),this._submit.setAttribute("disabled",!0)}_enableButtonState(){this._submit.classList.remove(this._settings.inactiveButtonClass),this._submit.removeAttribute("disabled",!0)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this._disableButtonState():this._enableButtonState()}_resetValidation(){this._disableButtonState(),this._inputList.forEach((t=>{this._hideErrorMessage(t)}))}_showErrorMessage(t){const e=t.validationMessage,s=this._formElement.querySelector(".".concat(t.id,"-error"));s.textContent=e,t.classList.add(this._settings.inputErrorClass),s.classList.add(this._settings.errorClass)}_hideErrorMessage(t){const e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass)}_checkInputValidity(t){t.validity.valid?this._hideErrorMessage(t):this._showErrorMessage(t)}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._toggleButtonState(),this._formElement.addEventListener("submit",(t=>{t.preventDefault(),this._resetValidation()})),this._setEventListeners()}}let m;const v=new class{constructor(t){let{URL:e,headers:s}=t;this.url=e,this.headers=s}getUserInfo(){return t("".concat(this.url,"/users/me"),{headers:this.headers})}getInitialCards(){return t("".concat(this.url,"/cards"),{headers:this.headers})}addCard(e){let{name:s,link:n}=e;return t("".concat(this.url,"/cards"),{headers:this.headers,method:"POST",body:JSON.stringify({name:s,link:n})})}editProfileServer(e){let{name:s,about:n}=e;return t("".concat(this.url,"/users/me"),{headers:this.headers,method:"PATCH",body:JSON.stringify({name:s,about:n})})}deleteCard(e){return t("".concat(this.url,"/cards/").concat(e),{headers:this.headers,method:"DELETE"})}likeCard(e){return t("".concat(this.url,"/cards/likes/").concat(e),{headers:this.headers,method:"PUT"})}dislikeCard(e){return t("".concat(this.url,"/cards/likes/").concat(e),{headers:this.headers,method:"DELETE"})}updateAvatarImage(e){let{avatar:s}=e;return t("".concat(this.url,"/users/me/avatar"),{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:s})})}}({URL:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:" 4f091419-1c89-4f29-928b-74f786fd1208","Content-Type":"application/json"}});Promise.all([v.getInitialCards(),v.getUserInfo()]).then((t=>{let[e,s]=t;m=s._id,C.renderItems(e),B.setUserInfo({name:s.name,job:s.about,avatar:s.avatar})}));const{cardsTemplate:g}=s,b=document.querySelector(".profile__add-button"),f=t=>{const e=new d({data:t,template:g,handleClick:()=>{L.open(t)},handleDelete:t=>{S.open(),S.setAction((()=>v.deleteCard(t).then((t=>(e._removeCard(),t))).catch((t=>console.log(t)))))},userId:m,handleLike:t=>{e._likeButton.classList.toggle(s.cardLikeButtonActive),e._likeButton.classList.contains(s.cardLikeButtonActive)?v.likeCard(t).then((t=>{e._cardCounter.textContent=t.likes.length})):v.dislikeCard(t).then((t=>{e._cardCounter.textContent=t.likes.length}))}});return e.generateCard()},C=new class{constructor(t,e){let{renderer:s}=t;this._renderer=s,this._container=e}renderItems(t){t.forEach((t=>{this._renderer(t)}))}setItem(t){this._container.append(t)}prependItem(t){this._container.prepend(t)}}({renderer:t=>{const e=f(t);C.setItem(e)}},n),E=new _("#addImagePopup",(()=>{const{caption:t,image:s}=E.getInputValues();e(!0,E._submitButton),v.addCard({name:t,link:s}).then((t=>{const e=f(t);n.prepend(e)})).catch((t=>console.log(t))).finally(e(!1,E._submitButton)),E.close()})),L=new class extends h{constructor(t){super(t),this._popupImage=document.querySelector(".popup__image"),this._popupCaption=document.querySelector(".popup__caption")}open(t){let{name:e,link:s}=t;this._popupImage.src=s,this._popupImage.alt=e,this._popupCaption.textContent=e,super.open()}}(".popup_image"),S=new class extends h{setAction(t){this.handleDelete=t}setEventListeners(){this._popup.addEventListener("submit",(t=>{t.preventDefault(),this.handleDelete(),this.close()})),super.setEventListeners()}}(".popup_confirm"),k={};var y;y={formSelector:".form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},[...document.querySelectorAll(y.formSelector)].forEach((t=>{const e=new p(y,t),s=t.getAttribute("name");k[s]=e,e.enableValidation()}));const I=document.querySelector("#profilePopup__edit-button"),B=new class{constructor(t){let{name:e,job:s,avatar:n}=t;this._name=document.querySelector(e),this._job=document.querySelector(s),this._avatar=document.querySelector(n)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(t){let{name:e,job:s,avatar:n}=t;this._name.textContent=e,this._job.textContent=s,this._avatar.src=n}}({name:".profile__name",job:".profile__description",avatar:".profile__avatar-image"}),q=new _("#profilePopup",(()=>{const{fullName:t,description:s}=q.getInputValues();e(!0,q._submitButton),v.editProfileServer({name:t,about:s}).then((e=>(B.setUserInfo({name:t,job:s,avatar:e.avatar}),e))).catch((t=>console.log(t))).finally(e(!1,q._submitButton)),q.close()})),w=document.querySelector(".profile__overlay"),P=new _("#edit-profile-image",(()=>{const{updateImageUrl:t}=P.getInputValues();e(!0,P._submitButton),v.updateAvatarImage({avatar:t}).then((e=>{B.setUserInfo({name:e.name,job:e.about,avatar:t})})).catch((t=>console.log(t))).finally(e(!1,P._submitButton)),P.close()}));b.addEventListener("click",(()=>E.open())),w.addEventListener("click",(()=>P.open())),I.addEventListener("click",(()=>{const{name:t,job:e}=B.getUserInfo();q.setInputValues({fullName:t,description:e}),q.open()})),L.setEventListeners(),q.setEventListeners(),E.setEventListeners(),S.setEventListeners(),P.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,